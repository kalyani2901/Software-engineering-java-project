#BlueJ class context
comment0.params=
comment0.target=DummyModel()
comment0.text=constructor\ of\ DummyModel\nfiles\ will\ be\ read\ and\ stored\ to\ corresponding\ hashmap\ or\ arrayList
comment1.params=
comment1.target=java.util.List\ getProducts()
comment1.text=\ get\ the\ List\ of\ products\n@return\ type\:\ List<Product>
comment10.params=
comment10.target=void\ writeToMovie()
comment10.text=write\ orders\ to\ file\n\ \ \ \ \ \ \ get\ order\ information\ from\ hashmaps\:\ orders\nstore\ information\ into\ order.txt\ file
comment11.params=username
comment11.target=Customer\ getUserInfo(java.lang.String)
comment11.text=get\ particular\ user\ personal\ information\ from\ details\ by\ user\ name\n\ \ \ \ \ \ \ @param\ \ String\ username\n@return\ type\:\ Customer
comment12.params=username\ info
comment12.target=boolean\ setUserInfo(java.lang.String,\ Customer)
comment12.text=set\ a\ user\ personal\ information\ to\ details\ \n\ \ \ \ \ \ \ @param\ String\ username,Customer\ info\n@return\ type\:\ true
comment13.params=title\ mov
comment13.target=boolean\ setMovieInfo(java.lang.String,\ Movie)
comment13.text=add\ a\ movie\ information\ to\ productList\ \n\ \ \ \ \ \ \ @param\ \ String\ title,Movie\ mov\n@return\ type\:\ true
comment14.params=title\ mus
comment14.target=boolean\ setMusicInfo(java.lang.String,\ Music)
comment14.text=add\ a\ music\ information\ to\ productList\ \n\ \ \ \ \ \ \ @param\ \ String\ title,Movie\ mov\n@return\ type\:\ true
comment15.params=title\ game
comment15.target=boolean\ setGameInfo(java.lang.String,\ Game)
comment15.text=add\ a\ game\ information\ to\ productList\ \n\ \ \ \ \ \ \ @param\ \ String\ title,Movie\ mov\n@return\ type\:\ true
comment16.params=title\ tv
comment16.target=boolean\ setTvSeriesInfo(java.lang.String,\ TvSeries)
comment16.text=add\ a\ TV\ SERIES\ information\ to\ productList\ \n\ \ \ \ \ \ \ @param\ \ String\ title,Movie\ mov\n@return\ type\:\ true
comment17.params=cart
comment17.target=float\ getPrice(Cart)
comment17.text=calcualte\ totle\ price\ of\ items\ in\ a\ cart\ \n\ \ \ \ \ \ \ @param\ \ Cart\ cart\n@return\ float\ total
comment18.params=currentUserID\ cart
comment18.target=boolean\ processOrder(java.lang.String,\ Cart)
comment2.params=item
comment2.target=java.util.List\ getSearchResult(java.lang.String)
comment2.text=\ search\ an\ item\ in\ 'orders'\ hashmap\ and\ stored\ the\ orders\ contain\ that\ item\ into\ an\ arraylist\n\ @param\:\ String\ itemname\n@return\ type\:\ List<Order>
comment3.params=item\ date
comment3.target=java.util.List\ getSearchResult(java.lang.String,\ java.lang.String)
comment3.text=\ search\ an\ item\ with\ date\ in\ 'orders'\ hashmap\ and\ stored\ the\ orders\ contain\ that\ item\ in\ that\ date\ into\ an\ arraylist\n\ @param\ \:\ String\ itemname,String\ ordered\ date\n@return\ type\:\ List<Order>
comment4.params=username\ password
comment4.target=boolean\ login(java.lang.String,\ java.lang.String)
comment4.text=\ login\ to\ the\ system\ with\ username\ and\ passowrd.\ If\ successful,the\ method\ will\ return\ ture,\ otherwise\ it\ will\ return\ false\n\ @param\ \:\ String\ username,\ String\ password\n@return\ type\:\ boolean
comment5.params=username\ password
comment5.target=boolean\ signup(java.lang.String,\ java.lang.String)
comment5.text=\ sign\ up\ to\ the\ system\ with\ username\ and\ passowrd.\ \n\ Check\ in\ hashmap\ whether\ the\ username\ is\ already\ exist\ or\ not.\ If\ exist,\ return\ falses\ and\ do\ nothing.\n\ If\ successful,the\ method\ will\ return\ ture.\n\ @param\ \:\ String\ username,\ String\ password\n@return\ type\:\ boolean
comment6.params=
comment6.target=void\ write()
comment6.text=write\ cust\ to\ file\n\ \ \ \ \ \ \ get\ customer\ information\ from\ hashmaps\:\ details\ and\ passwords\nmatching\ common\ key\ for\ the\ two\ hashmaps\ and\ store\ information\ together\ into\ one\ line\ of\ file
comment7.params=
comment7.target=void\ readOrder()
comment7.text=read\ order.txt\ and\ store\ in\ orders\ hashmap
comment8.params=order
comment8.target=void\ setOrder(Order)
comment8.text=\ put\ one\ order\ into\ orders\ hashmap,\n\ the\ key\ of\ that\ hashmap\ is\ increasing\ from\ 0,\n\ everytime\ it\ will\ get\ the\ max\ key\ value\ and\ increase\ 1\n@param\ \:\ Order\ order
comment9.params=
comment9.target=void\ writeOrder()
comment9.text=write\ orders\ to\ file\n\ \ \ \ \ \ \ get\ order\ information\ from\ hashmaps\:\ orders\nstore\ information\ into\ order.txt\ file
numComments=19
